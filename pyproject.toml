[tool.poetry]
authors = ["PyBites <info@pybit.es>", "Patrick-Oliver Groß <mail@pogross.de>"]
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Topic :: Communications :: Chat",
]
description = "PyBites Karmabot - A Python based Slack Chatbot for Community interaction"
homepage = "https://github.com/PyBites-Open-Source/karmabot"
keywords = ["karmabot"]
license = "MIT"
maintainers = ["Patrick-Oliver Groß <mail@pogross.de>"]
name = "karmabot"
readme = "README.md"
repository = "https://github.com/PyBites-Open-Source/karmabot"
version = "3.1.0"

[tool.poetry.dependencies]
SQLAlchemy = "^2.0.1"
feedparser = "^6.0.10"
freezegun = "^1.2.2"
humanize = "^4.5.0"
importlib-metadata = "^3.7.3"
psycopg2-binary = "^2.9.5"
pyjokes = "^0.6.0"
python = "^3.10"
python-dotenv = "^0.21.1"
requests = "^2.28.2"
slack-bolt = "^1.6.1"
slack-sdk = "^3.7.0"

[tool.poetry.scripts]
karmabot = "karmabot.main:main"

[tool.poetry.group.dev.dependencies]
black = "22.12.0"
codecov = "^2.1.12"
coverage = {extras = ["toml"], version = "^7.2.1"}
flake8 = "^6.0.0"
flake8-bandit = "^4.1.1"
flake8-blind-except = "^0.2.1"
flake8-bugbear = "^23.1.20"
flake8-builtins = "^2.1.0"
flake8-debugger = "^4.1.2"
flake8-logging-format = "^0.9.0"
flake8-use-fstring = "^1.4"
isort = "^5.12.0"
mypy = "^0.991"
nox = "^2022.11.21"
pre-commit = "^3.0.3"
pytest = "^7.2.1"
pytest-cov = "^4.0.0"
pytest-mock = "^3.10.0"
safety = "^2.3.5"

[tool.coverage.paths]
source = ["src", "*/site-packages"]

[tool.coverage.run]
branch = true
omit = [
  "src/karmabot/__main__.py",
  "src/karmabot/__init__.py",
  "src/karmabot/main.py",
  "src/karmabot/db/__all_models.py",
  "src/karmabot/db/modelsbase.py",
]
source = ["karmabot"]

[tool.coverage.report]
show_missing = true

[tool.black]
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.nox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )
)
'''
include = '\.pyi?$'
line-length = 88
target-version = ["py310", "py311"]

[tool.isort]
known_third_party = "dotenv,feedparser,humanize,pyjokes,pytest,requests,sqlalchemy,freezegun,slack_bolt,slack_sdk"
profile = "black"

[tool.mypy]
ignore_missing_imports = true
mypy_path = "src,tests"
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = [
  "freezegun",
  "requests",
]

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry_core"]
